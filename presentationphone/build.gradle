plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.pnam.watchingsocceronline.presentationphone"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding true
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation project(path: ':data')
    implementation project(path: ':domain')
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation 'com.google.android:flexbox:2.0.1'

    hilt()

    motionLayout()

    exoPlayer()

    ktx()

    coroutine()

    coil()

    work()

    circularProgressBar()

    retrofit()
}

private void hilt() {
    dependencies.implementation "com.google.dagger:hilt-android:$hilt_version"
    dependencies.kapt "com.google.dagger:hilt-compiler:$hilt_version"
}

private void motionLayout() {
    dependencies.implementation "androidx.constraintlayout:constraintlayout:$motion_layout_version"
}

private void exoPlayer() {
    dependencies.implementation "com.google.android.exoplayer:exoplayer:$exo_player_version"
    dependencies.implementation "com.google.android.exoplayer:exoplayer-core:$exo_player_version"
    dependencies.implementation "com.google.android.exoplayer:exoplayer-dash:$exo_player_version"
    dependencies.implementation "com.google.android.exoplayer:exoplayer-ui:$exo_player_version"
}

private void ktx(){
    dependencies.implementation "androidx.core:core-ktx:$core_ktx_version"
    dependencies.implementation "androidx.fragment:fragment-ktx:$fragment_ktx_version"
}

private void coroutine(){
    dependencies.implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"
}

private void coil() {
    dependencies.implementation "io.coil-kt:coil:$coil_version"
}

private void work() {
    // Kotlin + coroutines
    dependencies.implementation "androidx.work:work-runtime:$work_version"
    // optional - Multiprocess support
    dependencies.implementation "androidx.work:work-multiprocess:$work_version"
}

private void circularProgressBar() {
    dependencies.implementation "com.mikhaellopez:circularprogressbar:$circular_progress_bar_version"
}

private void retrofit(){
    dependencies.implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    dependencies.implementation "com.google.code.gson:gson:$gson_version"
    dependencies.implementation "com.squareup.retrofit2:converter-gson:$gson_converter_version"
    dependencies.implementation "com.squareup.okhttp3:logging-interceptor:$logging_version"
}